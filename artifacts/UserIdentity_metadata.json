{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Unauthorized",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "UserNotFound",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "username",
						"type": "string"
					}
				],
				"name": "UsernameTaken",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "role",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					}
				],
				"name": "AuthorizedContractSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "username",
						"type": "string"
					}
				],
				"name": "ProfileCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ProfileUpdated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_username",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_skills",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "_ipfsPortfolioHash",
						"type": "bytes"
					}
				],
				"name": "createProfile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getProfile",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "username",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "skills",
								"type": "string"
							},
							{
								"internalType": "bytes",
								"name": "ipfsPortfolioHash",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "reputationScore",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "projectsCompleted",
								"type": "uint256"
							}
						],
						"internalType": "struct IUserIdentity.UserProfile",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "incrementProjectsCompleted",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "profiles",
				"outputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "username",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "skills",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "ipfsPortfolioHash",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "reputationScore",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "projectsCompleted",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "projectAuthorityAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reputationContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "setProjectAuthority",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "setReputationContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_skills",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "_ipfsPortfolioHash",
						"type": "bytes"
					}
				],
				"name": "updateProfile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newScore",
						"type": "uint256"
					}
				],
				"name": "updateReputation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/core/UserIdentity_flattened.sol": "UserIdentity"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/core/UserIdentity_flattened.sol": {
			"keccak256": "0xfb04b343cc8d806bd33b31b40aa08fa3664bb7792159f65fd94630e7b33b30d6",
			"urls": [
				"bzz-raw://a4d4228e4215d38681cb602590e4a476274967c67ceb22c41c7da8a51005f3b4",
				"dweb:/ipfs/QmeErKjWkmV7fVHLawX3iVhsYCfF2RWNFqZgKxLNqHCKep"
			]
		}
	},
	"version": 1
}